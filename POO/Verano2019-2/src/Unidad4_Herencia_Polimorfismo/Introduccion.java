/*
 * UNIVERSIDAD AUTÓNOMA DE TAMAULIPAS
 * FACULTAD DE INGENENIERÍA "ARTURO NARRO SILLER"
 * CURSO DE VERANO 2019 - 2 
 * PROGRAMACIÓN ORIENTADA A OBJETOS
 * PROFESOR: MCC. GARCÍA RUIZ ALEJANDRO H.
 * CONTACTO: ahgarcia@docentes.uat.edu.mx
 * 
 * EQUIPO
 * 
 * INTEGRANTES:
 * NOMBRE1
 * NOMBRE2
 * 
 * CONTACTO EQUIPO: 
 */

package Unidad4_Herencia_Polimorfismo;

/**
 *
 * @author Alejandro_GarciaRuiz
 */
public class Introduccion {
/*
    LA HERENCIA ES LA CAPACIDAD DE UNA CLASE PARA "HEREDAR" SUS MÉTODOS
    Y ATRIBUTOS A OTRA CLASE. EN JAVA ÚNICAMENTE EXISTE LA 
    HERENCIA SIMPLE, ES DECIR, UNA CLASE SOLO PUEDE SER HIJA DE OTRA 
    CLASE, SIN EMBARGO, UNA CLASE PADRE PUEDE TENER VARIAS CLASES HIJAS.
    
    LOS MÉTODOS Y ATRIBUTOS HEREDADOS SON TODOS LOS DE LA CLASE PADRE
    A LAS CLASES HIJAS, NO SE PUEDE DECIDIR CUALES SI Y CUALES NO LO HARÁN

    LAS CLASES HIJAS SON LLAMADAS "SUBCLASES".
    LA CLASE PADRE ES CONOCIDA COMO "SUPERCLASE"
    
    LAS CLASES HIJAS PUEDEN ACCEDER A LOS MÉTODOS Y/O ATRIBUTOS DE 
    LA CLASE PADRE A TRAVÉS DE LA PALABRA RESERVADA "SUPER"
    
    *SE EMPLEA HERENCIA CUANDO SE TRABAJARÁ CON CLASES EN LAS QUE 
    SUS ATRIBUTOS Y/O MÉTODOS SON RELACIONADOS. ESTO EVITA DUPLICAR LÍNEAS 
    DE CÓDIGO. AL MISMO TIEMPO, DISMINUYE EL TIEMPO DE CODIFICACIÓN.
    
    EJEMPLO..
    
        CLASE PERSONA  (superclase)
        CLASE ALUMNO (subclase)
        CLASE PROFESOR (subclase)
    
    UNA CLASE HIJA, A SU VEZ, PUEDE SER LA CLASE PADRE DE OTRA CLASE...
    */
    
    
}
